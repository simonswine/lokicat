/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: logproto.proto */

#ifndef PROTOBUF_C_logproto_2eproto__INCLUDED
#define PROTOBUF_C_logproto_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "google/protobuf/timestamp.pb-c.h"
#include "github.com/gogo/protobuf/gogoproto/gogo.pb-c.h"

typedef struct _Logproto__PushRequest Logproto__PushRequest;
typedef struct _Logproto__PushResponse Logproto__PushResponse;
typedef struct _Logproto__QueryRequest Logproto__QueryRequest;
typedef struct _Logproto__QueryResponse Logproto__QueryResponse;
typedef struct _Logproto__LabelRequest Logproto__LabelRequest;
typedef struct _Logproto__LabelResponse Logproto__LabelResponse;
typedef struct _Logproto__Stream Logproto__Stream;
typedef struct _Logproto__Entry Logproto__Entry;


/* --- enums --- */

typedef enum _Logproto__Direction {
  LOGPROTO__DIRECTION__FORWARD = 0,
  LOGPROTO__DIRECTION__BACKWARD = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LOGPROTO__DIRECTION)
} Logproto__Direction;

/* --- messages --- */

struct  _Logproto__PushRequest
{
  ProtobufCMessage base;
  size_t n_streams;
  Logproto__Stream **streams;
};
#define LOGPROTO__PUSH_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__push_request__descriptor) \
    , 0,NULL }


struct  _Logproto__PushResponse
{
  ProtobufCMessage base;
};
#define LOGPROTO__PUSH_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__push_response__descriptor) \
     }


struct  _Logproto__QueryRequest
{
  ProtobufCMessage base;
  char *query;
  uint32_t limit;
  Google__Protobuf__Timestamp *start;
  Google__Protobuf__Timestamp *end;
  Logproto__Direction direction;
  char *regex;
};
#define LOGPROTO__QUERY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__query_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, NULL, NULL, LOGPROTO__DIRECTION__FORWARD, (char *)protobuf_c_empty_string }


struct  _Logproto__QueryResponse
{
  ProtobufCMessage base;
  size_t n_streams;
  Logproto__Stream **streams;
};
#define LOGPROTO__QUERY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__query_response__descriptor) \
    , 0,NULL }


struct  _Logproto__LabelRequest
{
  ProtobufCMessage base;
  char *name;
  /*
   * True to fetch label values, false for fetch labels names.
   */
  protobuf_c_boolean values;
};
#define LOGPROTO__LABEL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__label_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


struct  _Logproto__LabelResponse
{
  ProtobufCMessage base;
  size_t n_values;
  char **values;
};
#define LOGPROTO__LABEL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__label_response__descriptor) \
    , 0,NULL }


struct  _Logproto__Stream
{
  ProtobufCMessage base;
  char *labels;
  size_t n_entries;
  Logproto__Entry **entries;
};
#define LOGPROTO__STREAM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__stream__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  _Logproto__Entry
{
  ProtobufCMessage base;
  Google__Protobuf__Timestamp *timestamp;
  char *line;
};
#define LOGPROTO__ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logproto__entry__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/* Logproto__PushRequest methods */
void   logproto__push_request__init
                     (Logproto__PushRequest         *message);
size_t logproto__push_request__get_packed_size
                     (const Logproto__PushRequest   *message);
size_t logproto__push_request__pack
                     (const Logproto__PushRequest   *message,
                      uint8_t             *out);
size_t logproto__push_request__pack_to_buffer
                     (const Logproto__PushRequest   *message,
                      ProtobufCBuffer     *buffer);
Logproto__PushRequest *
       logproto__push_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__push_request__free_unpacked
                     (Logproto__PushRequest *message,
                      ProtobufCAllocator *allocator);
/* Logproto__PushResponse methods */
void   logproto__push_response__init
                     (Logproto__PushResponse         *message);
size_t logproto__push_response__get_packed_size
                     (const Logproto__PushResponse   *message);
size_t logproto__push_response__pack
                     (const Logproto__PushResponse   *message,
                      uint8_t             *out);
size_t logproto__push_response__pack_to_buffer
                     (const Logproto__PushResponse   *message,
                      ProtobufCBuffer     *buffer);
Logproto__PushResponse *
       logproto__push_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__push_response__free_unpacked
                     (Logproto__PushResponse *message,
                      ProtobufCAllocator *allocator);
/* Logproto__QueryRequest methods */
void   logproto__query_request__init
                     (Logproto__QueryRequest         *message);
size_t logproto__query_request__get_packed_size
                     (const Logproto__QueryRequest   *message);
size_t logproto__query_request__pack
                     (const Logproto__QueryRequest   *message,
                      uint8_t             *out);
size_t logproto__query_request__pack_to_buffer
                     (const Logproto__QueryRequest   *message,
                      ProtobufCBuffer     *buffer);
Logproto__QueryRequest *
       logproto__query_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__query_request__free_unpacked
                     (Logproto__QueryRequest *message,
                      ProtobufCAllocator *allocator);
/* Logproto__QueryResponse methods */
void   logproto__query_response__init
                     (Logproto__QueryResponse         *message);
size_t logproto__query_response__get_packed_size
                     (const Logproto__QueryResponse   *message);
size_t logproto__query_response__pack
                     (const Logproto__QueryResponse   *message,
                      uint8_t             *out);
size_t logproto__query_response__pack_to_buffer
                     (const Logproto__QueryResponse   *message,
                      ProtobufCBuffer     *buffer);
Logproto__QueryResponse *
       logproto__query_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__query_response__free_unpacked
                     (Logproto__QueryResponse *message,
                      ProtobufCAllocator *allocator);
/* Logproto__LabelRequest methods */
void   logproto__label_request__init
                     (Logproto__LabelRequest         *message);
size_t logproto__label_request__get_packed_size
                     (const Logproto__LabelRequest   *message);
size_t logproto__label_request__pack
                     (const Logproto__LabelRequest   *message,
                      uint8_t             *out);
size_t logproto__label_request__pack_to_buffer
                     (const Logproto__LabelRequest   *message,
                      ProtobufCBuffer     *buffer);
Logproto__LabelRequest *
       logproto__label_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__label_request__free_unpacked
                     (Logproto__LabelRequest *message,
                      ProtobufCAllocator *allocator);
/* Logproto__LabelResponse methods */
void   logproto__label_response__init
                     (Logproto__LabelResponse         *message);
size_t logproto__label_response__get_packed_size
                     (const Logproto__LabelResponse   *message);
size_t logproto__label_response__pack
                     (const Logproto__LabelResponse   *message,
                      uint8_t             *out);
size_t logproto__label_response__pack_to_buffer
                     (const Logproto__LabelResponse   *message,
                      ProtobufCBuffer     *buffer);
Logproto__LabelResponse *
       logproto__label_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__label_response__free_unpacked
                     (Logproto__LabelResponse *message,
                      ProtobufCAllocator *allocator);
/* Logproto__Stream methods */
void   logproto__stream__init
                     (Logproto__Stream         *message);
size_t logproto__stream__get_packed_size
                     (const Logproto__Stream   *message);
size_t logproto__stream__pack
                     (const Logproto__Stream   *message,
                      uint8_t             *out);
size_t logproto__stream__pack_to_buffer
                     (const Logproto__Stream   *message,
                      ProtobufCBuffer     *buffer);
Logproto__Stream *
       logproto__stream__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__stream__free_unpacked
                     (Logproto__Stream *message,
                      ProtobufCAllocator *allocator);
/* Logproto__Entry methods */
void   logproto__entry__init
                     (Logproto__Entry         *message);
size_t logproto__entry__get_packed_size
                     (const Logproto__Entry   *message);
size_t logproto__entry__pack
                     (const Logproto__Entry   *message,
                      uint8_t             *out);
size_t logproto__entry__pack_to_buffer
                     (const Logproto__Entry   *message,
                      ProtobufCBuffer     *buffer);
Logproto__Entry *
       logproto__entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logproto__entry__free_unpacked
                     (Logproto__Entry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Logproto__PushRequest_Closure)
                 (const Logproto__PushRequest *message,
                  void *closure_data);
typedef void (*Logproto__PushResponse_Closure)
                 (const Logproto__PushResponse *message,
                  void *closure_data);
typedef void (*Logproto__QueryRequest_Closure)
                 (const Logproto__QueryRequest *message,
                  void *closure_data);
typedef void (*Logproto__QueryResponse_Closure)
                 (const Logproto__QueryResponse *message,
                  void *closure_data);
typedef void (*Logproto__LabelRequest_Closure)
                 (const Logproto__LabelRequest *message,
                  void *closure_data);
typedef void (*Logproto__LabelResponse_Closure)
                 (const Logproto__LabelResponse *message,
                  void *closure_data);
typedef void (*Logproto__Stream_Closure)
                 (const Logproto__Stream *message,
                  void *closure_data);
typedef void (*Logproto__Entry_Closure)
                 (const Logproto__Entry *message,
                  void *closure_data);

/* --- services --- */

typedef struct _Logproto__Pusher_Service Logproto__Pusher_Service;
struct _Logproto__Pusher_Service
{
  ProtobufCService base;
  void (*push)(Logproto__Pusher_Service *service,
               const Logproto__PushRequest *input,
               Logproto__PushResponse_Closure closure,
               void *closure_data);
};
typedef void (*Logproto__Pusher_ServiceDestroy)(Logproto__Pusher_Service *);
void logproto__pusher__init (Logproto__Pusher_Service *service,
                             Logproto__Pusher_ServiceDestroy destroy);
#define LOGPROTO__PUSHER__BASE_INIT \
    { &logproto__pusher__descriptor, protobuf_c_service_invoke_internal, NULL }
#define LOGPROTO__PUSHER__INIT(function_prefix__) \
    { LOGPROTO__PUSHER__BASE_INIT,\
      function_prefix__ ## push  }
void logproto__pusher__push(ProtobufCService *service,
                            const Logproto__PushRequest *input,
                            Logproto__PushResponse_Closure closure,
                            void *closure_data);
typedef struct _Logproto__Querier_Service Logproto__Querier_Service;
struct _Logproto__Querier_Service
{
  ProtobufCService base;
  void (*query)(Logproto__Querier_Service *service,
                const Logproto__QueryRequest *input,
                Logproto__QueryResponse_Closure closure,
                void *closure_data);
  void (*label)(Logproto__Querier_Service *service,
                const Logproto__LabelRequest *input,
                Logproto__LabelResponse_Closure closure,
                void *closure_data);
};
typedef void (*Logproto__Querier_ServiceDestroy)(Logproto__Querier_Service *);
void logproto__querier__init (Logproto__Querier_Service *service,
                              Logproto__Querier_ServiceDestroy destroy);
#define LOGPROTO__QUERIER__BASE_INIT \
    { &logproto__querier__descriptor, protobuf_c_service_invoke_internal, NULL }
#define LOGPROTO__QUERIER__INIT(function_prefix__) \
    { LOGPROTO__QUERIER__BASE_INIT,\
      function_prefix__ ## query,\
      function_prefix__ ## label  }
void logproto__querier__query(ProtobufCService *service,
                              const Logproto__QueryRequest *input,
                              Logproto__QueryResponse_Closure closure,
                              void *closure_data);
void logproto__querier__label(ProtobufCService *service,
                              const Logproto__LabelRequest *input,
                              Logproto__LabelResponse_Closure closure,
                              void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    logproto__direction__descriptor;
extern const ProtobufCMessageDescriptor logproto__push_request__descriptor;
extern const ProtobufCMessageDescriptor logproto__push_response__descriptor;
extern const ProtobufCMessageDescriptor logproto__query_request__descriptor;
extern const ProtobufCMessageDescriptor logproto__query_response__descriptor;
extern const ProtobufCMessageDescriptor logproto__label_request__descriptor;
extern const ProtobufCMessageDescriptor logproto__label_response__descriptor;
extern const ProtobufCMessageDescriptor logproto__stream__descriptor;
extern const ProtobufCMessageDescriptor logproto__entry__descriptor;
extern const ProtobufCServiceDescriptor logproto__pusher__descriptor;
extern const ProtobufCServiceDescriptor logproto__querier__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_logproto_2eproto__INCLUDED */
